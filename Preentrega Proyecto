class Apartamento:
    def __init__(self, numero, habitantes, medidor):
        self.numero = numero
        self.habitantes = habitantes
        self.medidor = medidor

    def datos(self):
        print(f"* Número de apartamento: {self.numero}")
        print(f"* Número de habitantes: {self.habitantes}")
        print(f"* Consumo del apartamento: {self.medidor}")

class interior(Apartamento):
    def __init__(self, numero, habitantes, medidor):
        super().__init__(numero, habitantes, medidor)
        self.dañosColaterales = None  

    def pregunta_daños(self):
        while True:
            opcion = input(f"¿Hubo algún daño en el apartamento {self.numero}? (si/no): ")
            if opcion.lower() == 'si':
                self.dañosColaterales = True
                break
            elif opcion.lower() == 'no':
                self.dañosColaterales = False
                break
            else:
                print("Respuesta inválida. Por favor, ingrese 'si' o 'no'.")
    
    def datos(self):
        super().datos()  
        print(f"* Daños colaterales: {self.dañosColaterales}")
    
    def calcular_consumo_ajustado(self):
        consumo_base = self.medidor
        if self.dañosColaterales:
            consumo_base += 30
        return consumo_base 
    

class Evaluador_consumo_Agua:
    def __init__(self, consumo_total):
        self.consumo_total = consumo_total

    def evaluar(self):
        promedio = self.consumo_total / len(numeros)

        if promedio > 150:  
            return "Rojo: Consumo muy alto"
        elif promedio > 100:
            return "Amarillo: Consumo moderado"
        else:
            return "Verde: Consumo bajo"
        
class EvaluadorConsumo:
    def __init__(self, apartamentos):
        self.apartamentos = apartamentos
        self.consumo_total_ajustado = sum(apartamento.calcular_consumo_ajustado() for apartamento in apartamentos)

    def evaluar(self):
        promedio = self.consumo_total_ajustado / len(self.apartamentos)
        if promedio > 150:
            return "Rojo: Consumo muy alto"
        elif promedio > 100:
            return "Amarillo: Consumo moderado"
        else:
            return "Verde: Consumo bajo"

#Interfaz de datos globales
print(" ")
print("Bienvenido a tu sistema regulador de agua")
print("Inserte el nombre del Conjunto: ", end="")

Nconjunto = input()
Ntorre = int(input("Ingrese el numero de torres: "))
Npisos = int(input("Ingrese el numero de pisos: "))
Napartamento = int(input("Ingrese el numero de apartamentos por piso: "))
print(" ")

print(f"El nombre del conjunto es: {Nconjunto}")
print(f"El numero de torres es: {Ntorre}")
print(f"El numero de pisos es: {Npisos}")
print(f"El numero de apartamentos por piso es: {Napartamento}")

TapartamentosT = Npisos * Napartamento
print(f"En una torre hay : {TapartamentosT} apartamentos")

TapartamentosC = Ntorre * TapartamentosT
print(f"En el conjunto hay un total de: {TapartamentosC} apartamentos")
print(" ")

#array para determinar el consumo por torre (con la variable Ntorre)
numeros = []
n = int(Ntorre)
for i in range(n):
    num = float(input(f"Ingrese la cantidad de consumo de la torre {i+1}: "))  
    numeros.append(num)
print("El consumo por metro cubico (m3) de todas las torres son:", numeros)
print(" ")

consumo_total = sum(numeros)

evaluador= Evaluador_consumo_Agua(consumo_total)
evaluacion = evaluador.evaluar()

# Lista para almacenar los apartamentos de cada torre
apartamentos_por_torre = []
for i in range(Ntorre):
    # Calcular el consumo promedio por apartamento en esta torre
    promedio_por_apt = numeros[i] / TapartamentosT
    apartamentos_torre = []
    for j in range(TapartamentosT):
        numero_apt = j + 1  
        habitantes = int(input(f"Ingrese el número de habitantes del apartamento {numero_apt} en la torre {i+1}: "))
        apartamento = interior(numero_apt, habitantes, promedio_por_apt)
        apartamento.pregunta_daños()
        apartamentos_torre.append(apartamento)
    
    apartamentos_por_torre.append(apartamentos_torre)

todos_los_apartamentos = []
for torre in apartamentos_por_torre:
    todos_los_apartamentos.extend(torre)
evaluador = EvaluadorConsumo(todos_los_apartamentos)
evaluacion = evaluador.evaluar()

# Mostrar los datos de los apartamentos
for i in range(Ntorre):
    print(f"\nDatos de los apartamentos de la torre {i+1}:")
    for apartamento in apartamentos_por_torre[i]:
        apartamento.datos()
        if isinstance(apartamento, interior):
            consumo_ajustado = apartamento.calcular_consumo_ajustado()
            print(f"Consumo ajustado (con daños): {consumo_ajustado}")
            print(" ")  

print(" ")        
print("Promedio de consumo total de agua en todo el conjunto : ", sum(numeros)/len(numeros), "m3")
print(" ")
print(f"El consumo total ajustado del conjunto es: {evaluador.consumo_total_ajustado} m3")       
print(" ")
print(f"Evaluación del consumo: {evaluacion}")
print(" ")
